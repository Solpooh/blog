name: CI/CD Deploy Front & Back

on:
  push:
    branches: [ main ]

env:
  FRONT_DIR: board-front
  BACK_DIR: board-back
  
jobs:
  deploy-front:
    name: Build and Deploy Frontend to Web EC2
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies and build
        run: |
          cd ${{ env.FRONT_DIR }}
          npm ci
          npm run lint || true
          npm run build

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.DEPLOY_KEY }}
      
      - name: Add EC2 Host to known_hosts
        run: |
          ssh-keyscan -H ${{ secrets.WEB_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy built files to Web EC2
        run: |
          scp -r board-front/build/* ubuntu@${{ secrets.WEB_HOST }}:~/blog/board-front/build/
          ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.WEB_HOST }} << 'EOF'
            export NVM_DIR="$HOME/.nvm"
            source "$NVM_DIR/nvm.sh"
            pm2 restart static-page-server-3000
          EOF
          
  deploy-back:
    name: Build and Deploy Backend to WAS EC2
    runs-on: ubuntu-latest
    needs: deploy-front

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build with Gradle
        run: |
          cd ${{ env.BACK_DIR }}
          chmod +x gradlew
          ./gradlew clean build

          echo "📦 Checking jar file..."
          ls -lh build/libs
          test -f build/libs/board-back-0.0.1.jar || (echo "❌ JAR 파일이 생성되지 않았습니다!" && exit 1)
      
      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.DEPLOY_KEY }}

      - name: Add EC2 Host to known_hosts
        run: |
          ssh-keyscan -H ${{ secrets.WAS_HOST }} >> ~/.ssh/known_hosts
          
      - name: Copy jar to WAS EC2
        run: |
          echo "🚀 JAR 파일 전송 중..."
          scp -r board-back/build/libs/board-back-0.0.1.jar ubuntu@${{ secrets.WAS_HOST }}:~/blog/board-back/build/libs/board-back-0.0.1.jar

      - name: Restart backend on WAS EC2
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.WAS_HOST }} << 'EOF'
            export NVM_DIR="$HOME/.nvm"
            source "$NVM_DIR/nvm.sh"
            pm2 restart board-back
          EOF
